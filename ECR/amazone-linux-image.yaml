AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to pull Amazon Linux images from Docker Hub and push them to an existing AWS ECR repository on a weekly schedule using AWS CodeBuild.

Parameters:
  ExistingECRRepoName:
    Type: String
    Description: The name of the existing ECR repository to store Amazon Linux images.

  ExistingServiceRoleARN:
    Type: String
    Description: The ARN of the existing AWS IAM role to be used by AWS CodeBuild.

Resources:

  # AWS CodeBuild Project (Using Parameterized Service Role)
  AmazonLinuxCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: AmazonLinuxECRSync
      ServiceRole: !Ref ExistingServiceRoleARN
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: ECR_REPO_NAME
            Value: !Ref ExistingECRRepoName
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo "Starting Pre-Build Phase..."
                - export AWS_REGION=${AWS_REGION}
                - export AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}
                - export ECR_REPO_NAME=${ECR_REPO_NAME}
                - echo "AWS_REGION = ${AWS_REGION}"
                - echo "AWS_ACCOUNT_ID = ${AWS_ACCOUNT_ID}"
                - echo "ECR_REPO_NAME = ${ECR_REPO_NAME}"
                - echo "Logging into AWS ECR..."
                - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
            build:
              commands:
                - echo "Starting Build Phase..."
                - echo "Pulling Amazon Linux images from Docker Hub..."
                - docker pull amazonlinux:2
                - docker pull amazonlinux:2023
                - docker pull amazonlinux:latest
                - echo "Tagging and pushing images to AWS ECR..."
                - docker tag amazonlinux:2 ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:2
                - docker tag amazonlinux:2023 ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:2023
                - docker tag amazonlinux:latest ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:latest
                - echo "Pushing images to ECR..."
                - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:2
                - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:2023
                - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:latest
            post_build:
              commands:
                - echo "Build completed successfully!"

  # EventBridge Rule to Schedule CodeBuild Execution (Runs Weekly on Sunday)
  CodeBuildSchedulerRule:
    Type: AWS::Events::Rule
    Properties:
      Name: AmazonLinuxECRSyncSchedule
      ScheduleExpression: "cron(0 12 ? * SUN *)"  # Runs every Sunday at 12:00 UTC
      State: ENABLED
      Targets:
        - Arn: !GetAtt AmazonLinuxCodeBuildProject.Arn
          Id: "CodeBuildTarget"
          RoleArn: !GetAtt EventBridgeInvokeRole.Arn

  # IAM Role for EventBridge to Trigger CodeBuild
  EventBridgeInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EventBridgeCodeBuildInvokeRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InvokeCodeBuild
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - codebuild:StartBuild
                Resource: !GetAtt AmazonLinuxCodeBuildProject.Arn

Outputs:
  ECRRepositoryURL:
    Description: The ECR repository URL where images are stored.
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ExistingECRRepoName}"